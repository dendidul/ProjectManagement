@model Core.Dto.PMDb.FormTaskModel

@{
    ViewBag.Title = "Create Projects";
    Layout = "~/Views/Shared/Template.cshtml";
}

@*<h2>Create</h2>*@

@using (Html.BeginForm("Create", "BackLog", FormMethod.Post, new { Class = "", Id = "formAddRoles" }))
{
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <div class="x_panel">
                <div class="x_title">
                    <h2>Input</h2>
                    <ul class="nav navbar-right panel_toolbox">
                        <li>
                            <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                        </li>


                    </ul>


                    <div class="clearfix"></div>
                </div>
                <div class="clearfix"></div>

                <div class="form-horizontal form-label-left input_mask">

                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                            Task Group <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.DropDownListFor(model => model.TaskData.Taskgroupid, ViewBag.TaskGroup as IEnumerable<SelectListItem>, "", new { Class = "form-control  col-md-7 col-xs-12"})








                        </div>
                    </div>

                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                            Task Name <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.TaskData.Taskname, new { Class = "form-control col-md-7 col-xs-12", required = "true" })
                            @*<input id="name" class="form-control col-md-7 col-xs-12" data-validate-length-range="6" data-validate-words="2" name="name" placeholder="both name(s) e.g Jon Doe" required="required" type="text">*@
                        </div>
                    </div>
                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                            Project Name <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.DropDownListFor(model => model.TaskData.Projectid, ViewBag.Project as IEnumerable<SelectListItem>, "", new { Class = "form-control  col-md-7 col-xs-12", required = "true" })


                        </div>
                    </div>

                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                            Start Date <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.TaskData.Startdate, new { Class = "form-control col-md-7 col-xs-12 datepicker" })

                        </div>
                    </div>

                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                           End Date <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextBoxFor(model => model.TaskData.Duedate, new { Class = "form-control col-md-7 col-xs-12 datepicker" })
                        </div>
                    </div>

                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                            Severity <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.DropDownListFor(model => model.TaskData.Severityid, ViewBag.Severity as IEnumerable<SelectListItem>, "", new { Class = "form-control  col-md-7 col-xs-12" })

                            
                        </div>
                    </div>

                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                            Category <span class="required">*</span>
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.DropDownListFor(model => model.TaskData.Categoryid, ViewBag.Category as IEnumerable<SelectListItem>, "", new { Class = "form-control  col-md-7 col-xs-12" })


                        </div>
                    </div>

                    @*@if (Convert.ToInt32(Session["Role_ID"].ToString()) == 1 || Convert.ToInt32(Session["Role_ID"].ToString()) == 2 || Convert.ToInt32(Session["Role_ID"].ToString()) == 1004)
                    {*@
                        <div class="item form-group">
                            <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                                Assigned To <span class="required">*</span>
                            </label>
                            <div class="col-md-6 col-sm-6 col-xs-12">
                                @Html.DropDownListFor(model => model.TaskData.Assignto, ViewBag.EmployeeByProject as IEnumerable<SelectListItem>, "", new { Class = "form-control  col-md-7 col-xs-12" })


                            </div>
                        </div>

                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                            Status
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.DropDownListFor(model => model.TaskData.Statusid, ViewBag.AllStatus as IEnumerable<SelectListItem>, "", new { Class = "form-control  col-md-7 col-xs-12", required = "true" })


                        </div>
                    </div>
                    @*}*@

                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                            Description 
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextAreaFor(model => model.TaskData.Descripition, new { Class = "form-control col-md-7 col-xs-12" })

                        </div>
                    </div>

                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                            Reviewed By
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.DropDownListFor(model => model.TaskData.Reviewby, ViewBag.EmployeeByProject as IEnumerable<SelectListItem>, "", new { Class = "form-control  col-md-7 col-xs-12" })


                        </div>
                    </div>

                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                            Review Result
                        </label>
                        <div class="col-md-6 col-sm-6 col-xs-12">
                            @Html.TextAreaFor(model => model.TaskData.Result, new { Class = "form-control col-md-7 col-xs-12" })

                        </div>
                    </div>

                    <div class="item form-group">
                        <label class="control-label col-md-3 col-sm-3 col-xs-12" for="name">
                            Upload File
                        </label>

                        <div class="col-md-6 col-sm-6 col-xs-12">
                            <div class="form-group">
                                @*<input id="file-1" type="file" multiple class="file" data-overwrite-initial="false" data-min-file-count="2">*@

                                <form enctype="multipart/form-data">
                                    <input id="Upload_file" name="Upload_File" type="file" multiple>
                                </form>
                            </div>
                            @*<input id="name" class="form-control col-md-7 col-xs-12" data-validate-length-range="6" data-validate-words="2" name="name" placeholder="both name(s) e.g Jon Doe" required="required" type="text">*@
                        </div>

                    </div>



                   
                    </div>

                <div class="item form-group">
                    <div class="control-label col-md-5 col-sm-3 col-xs-12">
                        @*<button type="submit" class="btn btn-success">Submit</button>*@
                        <input type="submit" class="btn btn-success" value="Submit" />
                        @*<button type="button" class="btn btn-warning">Back To List</button>*@
                        <a href="/BackLog/Index/" class="btn btn-warning">Back To List</a>
                    </div>
                    <div class="col-md-6 col-sm-6 col-xs-12">
                    </div>


                </div>

                </div>
            </div>
        </div>
    
}

@section scripts {
    <script type="text/javascript">


        //$('#TaskData_StartDate').daterangepicker({
        //        singleDatePicker: true,
        //        calender_style: "picker_4"
        //    }, function (start, end, label) {
        //        console.log(start.toISOString(), end.toISOString(), label);
        //    });

        //$('#TaskData_DueDate').daterangepicker({
        //        singleDatePicker: true,
        //        calender_style: "picker_4"
        //    }, function (start, end, label) {
        //        console.log(start.toISOString(), end.toISOString(), label);
        //    });

        $(document).ready(function () {

            $('#Upload_file').fileinput({
                //language: 'es',
                language: 'eN',
                uploadAsync: 'false',
                uploadUrl: '/Global/UploadFileCreateTask/', // you must set a valid URL here else you will get an error
                allowedFileExtensions: ['jpg', 'png', 'gif','pdf','doc','docx','xlx','xlsx'],
                overwriteInitial: false,
                maxFileSize: 100000,
                maxFilesNum: 10,

                //allowedFileTypes: ['image', 'video', 'flash'],
                slugCallback: function (filename) {
                    return filename.replace('(', '_').replace(']', '_');
                }
            });
        });
       

            </script>
}
